// Docker compose orchestrates various containers (see- image vs containers)

version: '2'
services:
 nginx:
   image: nginx
 //Servidor.
   volumes:
   //Estan fuera de los contenedores. Facil guardar y eleminar.
   // mouting file system from what is in left (host) to what is in right (the container)

     - ./src/public:/var/www/
     - ./sites-enabled/default:/etc/nginx/conf.d/default.conf
   environment:
    - NGINX_PORT=80
 //??
   links:
 //Vincula con los otros contenedores dentro de la maquina.
 // Links containers with containers
 // Name inside and outside container
     - "web:web"
   ports:
     - "80:80"
   //??
  mongo:
    - image: mongo
   //Imagen mongo
   stdin_open: true
   tty: true
   //??
 web:
   build: ./backEnd
   //Lugar donde levanto el container
   command:  npm start
   //??
   volumes:
     - ./backEnd/bin:/usr/landing/bin
     - ./backEnd/routes:/usr/landing/routes
     - ./backEnd/views:/usr/landing/views
     - ./backEnd/public:/usr/landing/public
   // Mis carpetas : lugar en el container
   ports:
     - "3000:3000"
   // puerto de docker /puerto abierto de mi APP
   links:
    - "mongo:mongo"
   // porque tengo link y mongo como imagen y link
